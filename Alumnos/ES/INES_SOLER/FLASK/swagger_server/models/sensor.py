# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Sensor(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id_sensor: str=None, fechamuestreo: str=None, unidad: str=None, medicion: float=None):  # noqa: E501
        """Sensor - a model defined in Swagger

        :param id_sensor: The id_sensor of this Sensor.  # noqa: E501
        :type id_sensor: str
        :param fechamuestreo: The fechamuestreo of this Sensor.  # noqa: E501
        :type fechamuestreo: str
        :param unidad: The unidad of this Sensor.  # noqa: E501
        :type unidad: str
        :param medicion: The medicion of this Sensor.  # noqa: E501
        :type medicion: float
        """
        self.swagger_types = {
            'id_sensor': str,
            'fechamuestreo': str,
            'unidad': str,
            'medicion': float
        }

        self.attribute_map = {
            'id_sensor': 'id_sensor',
            'fechamuestreo': 'fechamuestreo',
            'unidad': 'unidad',
            'medicion': 'medicion'
        }

        self._id_sensor = id_sensor
        self._fechamuestreo = fechamuestreo
        self._unidad = unidad
        self._medicion = medicion

    @classmethod
    def from_dict(cls, dikt) -> 'Sensor':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The sensor of this Sensor.  # noqa: E501
        :rtype: Sensor
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_sensor(self) -> str:
        """Gets the id_sensor of this Sensor.


        :return: The id_sensor of this Sensor.
        :rtype: str
        """
        return self._id_sensor

    @id_sensor.setter
    def id_sensor(self, id_sensor: str):
        """Sets the id_sensor of this Sensor.


        :param id_sensor: The id_sensor of this Sensor.
        :type id_sensor: str
        """

        self._id_sensor = id_sensor

    @property
    def fechamuestreo(self) -> str:
        """Gets the fechamuestreo of this Sensor.


        :return: The fechamuestreo of this Sensor.
        :rtype: str
        """
        return self._fechamuestreo

    @fechamuestreo.setter
    def fechamuestreo(self, fechamuestreo: str):
        """Sets the fechamuestreo of this Sensor.


        :param fechamuestreo: The fechamuestreo of this Sensor.
        :type fechamuestreo: str
        """

        self._fechamuestreo = fechamuestreo

    @property
    def unidad(self) -> str:
        """Gets the unidad of this Sensor.


        :return: The unidad of this Sensor.
        :rtype: str
        """
        return self._unidad

    @unidad.setter
    def unidad(self, unidad: str):
        """Sets the unidad of this Sensor.


        :param unidad: The unidad of this Sensor.
        :type unidad: str
        """

        self._unidad = unidad

    @property
    def medicion(self) -> float:
        """Gets the medicion of this Sensor.


        :return: The medicion of this Sensor.
        :rtype: float
        """
        return self._medicion

    @medicion.setter
    def medicion(self, medicion: float):
        """Sets the medicion of this Sensor.


        :param medicion: The medicion of this Sensor.
        :type medicion: float
        """

        self._medicion = medicion
